-- 쿼리 실행 순서 : FROM -> WHERE -> SELECT -> ORDER BY

SELECT * FROM EMPLOYEES e 
WHERE SALARY >= 10000
ORDER BY HIRE_DATE  ASC;

-- 그룹함수 - MAX(최댓값)
SELECT max(SALARY) FROM EMPLOYEES e;

-- 그룹함수 - AVG(평균)
SELECT avg(SALARY) FROM EMPLOYEES e; 

-- 그룹함수 - SUM(합계)
SELECT SUM(SALARY) FROM EMPLOYEES e; 

-- 그룹함수 - COUNT(반환된 행의 개수)
SELECT COUNT(*)  FROM EMPLOYEES e;


-- 매니저 아이디가 149이면서 월급이 8000 이상인 직원의 수
SELECT COUNT(*)  FROM EMPLOYEES e
WHERE MANAGER_ID = '149'
AND SALARY >= 8000;

--1. DEPARTMENT_ID가 80인 직원들의 월급 합계를 구하세요.
SELECT SUM(salary) 
FROM EMPLOYEES e  
WHERE DEPARTMENT_ID = 80;

--2. JOB_ID가 IT_PROG인 직원들의 수를 구하세요.
SELECT COUNT(*)  
FROM EMPLOYEES e  
WHERE JOB_ID = 'IT_PROG';

--3. HIRE_DATE가 2006년 이후인 직원들의 평균 월급을 구하세요.
SELECT ROUND(AVG(SALARY))  
FROM EMPLOYEES e 
WHERE HIRE_DATE > '2006-01-01';

--4. 직원들 중 가장 월급이 낮은 값과 가장 월급이 큰 값을 구하세요
SELECT MAX(SALARY), MIN(SALARY) FROM EMPLOYEES e; 


SELECT DEPARTMENT_ID, avg(SALARY) FROM EMPLOYEES e
GROUP BY DEPARTMENT_ID ;

SELECT DEPARTMENT_ID, COUNT(*) FROM EMPLOYEES e 
GROUP BY DEPARTMENT_ID ;

-- JOB_ID별로 직원들의 평균 월급 조회
-- 평균 월급이 15000 이상
SELECT JOB_ID, AVG(SALARY) FROM EMPLOYEES e 
GROUP BY JOB_ID 
HAVING avg(SALARY) >= 15000;

-- JOB_ID 기준으로 MAX SALARY가 13000이상
SELECT JOB_ID, MAX(SALARY)  FROM EMPLOYEES e
GROUP BY JOB_ID 
HAVING MAX(SALARY) >= 13000;

-- 보너스를 받지 않는 JOB_ID 조회
SELECT JOB_ID, count(COMMISSION_PCT) FROM EMPLOYEES e 
GROUP BY JOB_ID 
HAVING count(COMMISSION_PCT) = '0';


-- JOB_ID를 기준으로 가장 낮은 월급이 5000이상
-- 가장 높은 월급이 10000이하인 JOB_ID 조회
SELECT JOB_ID FROM EMPLOYEES e
GROUP BY JOB_ID
HAVING MIN(SALARY) >= 5000
AND MAX(SALARY) <= 10000;


SELECT DEPARTMENT_ID, 
       SUM(SALARY) AS "총 급여의 합", 
       COUNT(*) AS "사원 수", 
       COUNT(COMMISSION_PCT) AS "보너스를 받는 사원 수", 
       min(SALARY) AS "최소 월급",
       max(SALARY) AS "최대 월급",
       AVG(SALARY) AS "평균 월급"  
FROM EMPLOYEES e
GROUP BY DEPARTMENT_ID 
ORDER BY DEPARTMENT_ID DESC;

 


