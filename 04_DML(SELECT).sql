SELECT
	DEPARTMENT_ID
FROM
	EMPLOYEES e
WHERE
	FIRST_NAME = 'Donald';


-- 50 출력
-- Donald랑 같은 부서의 직원들의 이름 조회
SELECT
	FIRST_NAME
FROM
	EMPLOYEES e
WHERE
	DEPARTMENT_ID = 50;


-- 서브쿼리
SELECT
	FIRST_NAME
FROM
	EMPLOYEES e
WHERE
	DEPARTMENT_ID = (
	SELECT
		DEPARTMENT_ID
	FROM
		EMPLOYEES e2
	WHERE
		FIRST_NAME = 'Donald');
	
	
-- 부서 아이디가 30인 직원들의 평균 급여보다 높은 직원들의 이름 조회
SELECT
	FIRST_NAME
FROM
	EMPLOYEES e
WHERE
	SALARY > (
	SELECT
		AVG(SALARY)
	FROM
		EMPLOYEES e2
	WHERE
		DEPARTMENT_ID = 30);
-- 4150
	
	
-- 가장 높은 월급을 받는 직원의 이름 조회
SELECT
	FIRST_NAME
FROM
	EMPLOYEES e
WHERE
	SALARY = (
	SELECT
		MAX(SALARY)
	FROM
		EMPLOYEES e2);
-- 24000
	
	
-- 입사일이 가장 빠른 직원의 이름
SELECT
	FIRST_NAME
FROM
	EMPLOYEES e
WHERE
	HIRE_DATE = (
	SELECT
		MIN(HIRE_DATE)
	FROM
		EMPLOYEES e2);
	
	
-- 가장 낮은 LOCATION_ID를 가진 도시 조회
SELECT
	CITY
FROM
	LOCATIONS l
WHERE
	LOCATION_ID = (
	SELECT
		MIN(LOCATION_ID)
	FROM
		LOCATIONS l2);
	
	
-- 가장 높은 보너스를 받는 직원의 이름 조회
SELECT
	FIRST_NAME
FROM
	EMPLOYEES e
WHERE
	COMMISSION_PCT = (
	SELECT
		MAX(COMMISSION_PCT)
	FROM
		EMPLOYEES e2);
	
	
--1. 사수 번호(MANAGER_ID)가 가장 낮은 직원의 이름과 핸드폰 번호를 출력하세요.
SELECT
	FIRST_NAME,
	PHONE_NUMBER
FROM
	EMPLOYEES e
WHERE
	MANAGER_ID = (
	SELECT
		MIN(MANAGER_ID)
	FROM
		EMPLOYEES e2);
	
	
--2. 사번(EMPLOYEE_ID)가 가장 높은 직원의 이름과 사번을 출력하세요.
SELECT
	FIRST_NAME,
	EMPLOYEE_ID
FROM
	EMPLOYEES e
WHERE
	EMPLOYEE_ID = (
	SELECT
		MAX(EMPLOYEE_ID)
	FROM
		EMPLOYEES e2);
	
	
--3. LOCATIONS 테이블에서 COUNTRY_ID가 가장 많은 도시(CITY)의 이름을 출력하세요.
SELECT
	CITY
FROM
	LOCATIONS l
WHERE
	COUNTRY_ID = (
	SELECT
		COUNTRY_ID
	FROM
		LOCATIONS l2
	GROUP BY
		l2.COUNTRY_ID
	ORDER BY
		COUNT(COUNTRY_ID) DESC
	                FETCH FIRST 1 ROW ONLY);
	               
	               
-- 부서별 가장 급여가 낮은 직원들의 정보 조회	               
SELECT
	*
FROM
	EMPLOYEES e
WHERE
	SALARY IN (
	SELECT
		MIN(SALARY)
	FROM
		EMPLOYEES e
	GROUP BY
		DEPARTMENT_ID);
	
	
-- 부서별 가장 낮은 급여
SELECT
	MIN(SALARY)
FROM
	EMPLOYEES e
GROUP BY
	DEPARTMENT_ID;

SELECT
	*
FROM
	EMPLOYEES e
WHERE
	SALARY > ANY (
	SELECT
		MIN(SALARY)
	FROM
		EMPLOYEES e2
	GROUP BY
		DEPARTMENT_ID);
	
	
--1. 직원이 가장 많은 부서의 부서명과 인원수를 조회하세요.
SELECT
	d.DEPARTMENT_NAME,
	COUNT(*)
FROM
	DEPARTMENTS d
JOIN EMPLOYEES e ON
	d.DEPARTMENT_ID = e.DEPARTMENT_ID
GROUP BY
	d.DEPARTMENT_NAME
HAVING
	COUNT(*) = (
	SELECT
		MAX(count(*))
	FROM
		EMPLOYEES e2
	GROUP BY
		DEPARTMENT_ID);
	
	
--2. Luis 또는 Pat과 같은 부서인 직원들을 조회하세요.
-- 사번(EMPLOYE_ID), 이름(FIRST_NAME), 부서번호(DEPARTMENT_ID)를 조회하세요.
SELECT
	EMPLOYEE_ID,
	FIRST_NAME,
	DEPARTMENT_ID
FROM
	EMPLOYEES e
WHERE
	DEPARTMENT_ID IN (
	SELECT
		DEPARTMENT_ID
	FROM
		EMPLOYEES
	WHERE
		FIRST_NAME = 'Pat'
		OR FIRST_NAME = 'Luis');
	
	
--3. 직무명 FI_ACCOUNT의 평균 월급보다 많이 받는 직원들의 이름과 월급을 조회하세요.
SELECT
	FIRST_NAME,
	SALARY
FROM
	EMPLOYEES e
WHERE
	SALARY > (
	SELECT
		AVG(SALARY)
	FROM
		EMPLOYEES e2
	WHERE
		JOB_ID = 'FI_ACCOUNT');
	
	
--4. 보너스를 받는 직원들의 평균 월급보다 더 높은 월급을 가진 직원들의 이름과 월급을
--조회하세요.
SELECT
	FIRST_NAME,
	SALARY
FROM
	EMPLOYEES e
WHERE
	SALARY > (
	SELECT
		AVG(SALARY)
	FROM
		EMPLOYEES e2
	WHERE
		COMMISSION_PCT IS NOT NULL);
	
	
	
	SELECT DEPARTMENT_ID FROM EMPLOYEES e 
	WHERE FIRST_NAME = 'Bruce';

--직무, 부서, 급여
SELECT JOB_ID, DEPARTMENT_ID, SALARY FROM EMPLOYEES e 
WHERE (DEPARTMENT_ID, SALARY) = (SELECT DEPARTMENT_ID, SALARY 
					   			 FROM EMPLOYEES e2 
					             WHERE FIRST_NAME = 'Bruce'); 
					            
					      
-- 이메일이 SBELL인 직원과 사수번호(MANAGER_ID), 부서번호(DEPARTMENT_ID)가 같은
-- 직원들의 이름(FIRST_NAME) 조회
SELECT FIRST_NAME FROM EMPLOYEES e
WHERE (MANAGER_ID, DEPARTMENT_ID) = (SELECT MANAGER_ID, DEPARTMENT_ID FROM EMPLOYEES e2
									 WHERE EMAIL = 'SBELL');
									
									

									
-- 월급이 5000 이상인 직원들의 이름, 부서 조회
SELECT FIRST_NAME,DEPARTMENT_ID FROM EMPLOYEES e 
WHERE (FIRST_NAME, DEPARTMENT_ID)  IN(SELECT FIRST_NAME, DEPARTMENT_ID 
									  FROM EMPLOYEES e2 
									  WHERE SALARY >= 5000);
									 
									 
-- 부서 번호가 50번이면서 이름이 S로 시작하는 직원들의 이름과 연봉 조회
-- 서브쿼리 조회 컬럼 : DEPARTMENT_ID, FIRST_NAME									 
SELECT FIRST_NAME, (SALARY*12)AS "연봉" 
FROM EMPLOYEES e
WHERE (DEPARTMENT_ID, FIRST_NAME) IN(SELECT DEPARTMENT_ID, FIRST_NAME FROM EMPLOYEES e2
 									 WHERE FIRST_NAME LIKE 'S%'
 									 AND DEPARTMENT_ID = 50);


-- 부서별 가장 많은 월급을 받는 직원들의 이름, 부서번호, 월급 조회
-- 서브쿼리 조회 컬럼 : DEPARTMENT_ID, MAX(SALARY)
 SELECT FIRST_NAME, DEPARTMENT_ID, SALARY FROM EMPLOYEES e 
 WHERE (DEPARTMENT_ID, SALARY) IN(SELECT DEPARTMENT_ID,MAX(SALARY) 
 								  FROM EMPLOYEES e2
 								  GROUP BY DEPARTMENT_ID); 
 								 
 								 
 								 
SELECT FIRST_NAME FROM (SELECT FIRST_NAME FROM EMPLOYEES e WHERE SALARY >= 10000);



SELECT DEPARTMENT_ID FROM (SELECT DEPARTMENT_ID, MAX(SALARY) 
							FROM EMPLOYEES e
							GROUP BY DEPARTMENT_ID);	
			
SELECT DEPARTMENT_ID,MAX(SALARY) FROM EMPLOYEES e 
GROUP BY DEPARTMENT_ID;


-- 인라인 뷰
-- 이름이 K로 시작, 월급 5000 이상

SELECT * FROM (SELECT FIRST_NAME, SALARY FROM EMPLOYEES e)
WHERE FIRST_NAME LIKE 'K%' 
AND SALARY >= 5000;


-- 부서별 월급 합계, 평균, 인원수 조회
SELECT
	*
FROM
	(
	SELECT
		DEPARTMENT_ID,
		SUM(SALARY) AS 합계,
		AVG(SALARY) AS 평균,
		COUNT(*) AS 인원수
		FROM EMPLOYEES e
		GROUP BY DEPARTMENT_ID)
WHERE 합계 >= 50000; 
	

--1. 가장 월급이 높은 직원의 이름과 월급을 조회하세요
SELECT
	*
FROM
	(
	SELECT
		FIRST_NAME,
		SALARY
	FROM
		EMPLOYEES e
	ORDER BY
		SALARY DESC)
	FETCH FIRST 1 ROW ONLY;


--2. JOBS 테이블에서 JOB_TITLE별로 MAX_SALARY를 확인하고, 가장 MAX_SALARY가
--높은 JOB_TITLE를 조회하세요.
SELECT * FROM (SELECT JOB_TITLE, MAX_SALARY FROM JOBS ORDER BY MAX_SALARY DESC)
FETCH FIRST 1 ROW ONLY;




--3. 부서별로 평균 연봉을 계산하고, 평균 연봉이 가장 높은 부서의 이름과 평균 연봉을
--조회하세요.

SELECT d.DEPARTMENT_NAME, 평균 FROM (SELECT DEPARTMENT_ID, AVG(SALARY*12) AS 평균 
									FROM EMPLOYEES e2 
									GROUP BY DEPARTMENT_ID) e
JOIN DEPARTMENTS d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID
ORDER BY 평균 DESC
FETCH FIRST 1 ROW ONLY;


--1. 월급이 6000 이상인 직원 중에서 상위 5명의 직원 이름과 연봉을 조회하세요.
SELECT ROWNUM, FIRST_NAME,
SALARY * 12
FROM
(
SELECT
	FIRST_NAME,
	SALARY
FROM
	EMPLOYEES e
ORDER BY
	SALARY DESC)
WHERE
SALARY >= 6000
AND ROWNUM <= 5;

--2. JOBS 테이블에서 JOB_TITLE을 ABC순으로 정렬하고 상위 10개의 JOB_TITLE을 조회하세요.
SELECT JOB_TITLE 
FROM JOBS j 
ORDER BY JOB_TITLE ASC
FETCH FIRST 10 ROW ONLY;

--3. DEPARTMENT 테이블에서 DEPARTMENT_ID를 기준으로 내림차순 정렬하여
--상위 15개의 ID, NAME, LOCATION_ID를 조회하세요.
SELECT DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID  
FROM DEPARTMENTS d
ORDER BY DEPARTMENT_ID DESC
FETCH FIRST 15 ROW ONLY;


--4. 이름이 e로 끝나는 직원 중 입사일이 오래된 상위 3명의 직원 이름과 연봉, 입사일을
--조회하세요.

SELECT FIRST_NAME, SALARY*12 AS, HIRE_DATE 연봉 FROM EMPLOYEES e
WHERE FIRST_NAME LIKE '%e'
ORDER BY HIRE_DATE ASC
FETCH FIRST 3 ROW ONLY;


--5. 전화번호가 4로 끝나는 직원 중 이메일을 ABC순으로 정렬하고 상위 3명의 직원 이름과
--이메일을 조회하세요.

SELECT * FROM (SELECT FIRST_NAME ,PHONE_NUMBER, EMAIL FROM EMPLOYEES e 
WHERE PHONE_NUMBER LIKE '%4' 
ORDER BY EMAIL ASC)
WHERE  ROWNUM <=3;
--6. 보너스를 가진 직원들의 보너스를 포함한 연봉(*12)을 계산하고 가장 많은 연봉을 받는
--상위 5명의 직원 이름과 보너스를 포함한 연봉을 조회하세요.
-- 단, 첫번째 컬럼의 별칭을 “순위”로 만들고 조회합니다.
-- 직원 이름의 별칭을 “이름”으로 만들고 조회합니다.
-- 보너스를 포함한 연봉의 별칭을 “보너스 연봉”으로 만들고 조회합니다.

SELECT ROWNUM AS "순위","이름","보너스 연봉" FROM (SELECT FIRST_NAME||' ' ||LAST_NAME AS 이름, 
			(SALARY+COMMISSION_PCT*SALARY)*12 AS "보너스 연봉" 
			FROM EMPLOYEES e  
			ORDER BY "보너스 연봉" DESC NULLS LAST)
WHERE ROWNUM <=5 ;



--SELECT ROWNUM AS 순위,
--FIRST_NAME||' ' ||LAST_NAME AS 이름, 
--(SALARY+COMMISSION_PCT*SALARY)*12 AS "보너스 연봉" 
--FROM EMPLOYEES e 
--WHERE COMMISSION_PCT IS NOT NULL 
--ORDER BY SALARY DESC
--FETCH FIRST 5 ROW ONLY;
				
	
	
	
	
	
	
	
	
	
				
	                 


